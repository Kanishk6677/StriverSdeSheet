#include<bits/stdc++.h>
int f(vector<int>&arr,int i,int j, vector<vector<int>>&dp)
{
    if(i==j) return 0;
    if(dp[i][j]!=-1) return dp[i][j];
    int minii=INT_MAX;
    for(int k=i;k<=j-1;k++)
    {
        int steps=arr[i-1]*arr[k]*arr[j]+f(arr,i,k,dp)+f(arr,k+1,j,dp);
        if(steps<minii) minii=steps;
    }
    return dp[i][j]=minii;
}
int matrixMultiplication(vector<int> &arr, int N)
{
    vector<vector<int>>dp(N,vector<int>(N,-1));
    return f(arr,1,N-1,dp);
}

// Tabulation
#include<bits/stdc++.h>
int f(vector<int>&arr,int i,int j, vector<vector<int>>&dp)
{
    if(i==j) return 0;
    if(dp[i][j]!=-1) return dp[i][j];
    int minii=INT_MAX;
    for(int k=i;k<=j-1;k++)
    {
        int steps=arr[i-1]*arr[k]*arr[j]+f(arr,i,k,dp)+f(arr,k+1,j,dp);
        if(steps<minii) minii=steps;
    }
    return dp[i][j]=minii;
}
int matrixMultiplication(vector<int> &arr, int N)
{
    int dp[N][N];
    for(int i=1;i<N;i++) dp[i][i]=0;
    for(int i=N-1;i>=1;i--)
    {
        for(int j=i+1;j<N;j++)
        {
            int minii=INT_MAX;
    for(int k=i;k<=j-1;k++)
    {
        int steps=arr[i-1]*arr[k]*arr[j]+dp[i][k]+dp[k+1][j];
        if(steps<minii) minii=steps;
    }
            dp[i][j]=minii;
        }
    }
    return dp[1][N-1];
}
